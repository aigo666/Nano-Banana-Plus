# 全栈单容器 Dockerfile - 包含前端、后端和 Nginx
FROM node:18-alpine

# 安装必要的工具和 Nginx
RUN apk add --no-cache \
    nginx \
    wget \
    curl \
    supervisor \
    mysql-client \
    && rm -rf /var/cache/apk/*

# 设置工作目录
WORKDIR /app

# ================================
# 构建后端
# ================================
COPY server/package*.json ./server/
RUN cd server && npm ci --only=production

# 安装开发依赖用于构建
COPY server/package*.json ./server/
RUN cd server && npm install tsx typescript

# 复制后端源代码并构建
COPY server/ ./server/
RUN cd server && npm run build:prod

# ================================
# 构建前端
# ================================
COPY package*.json ./
RUN npm ci

# 复制前端源代码并构建
COPY src/ ./src/
COPY public/ ./public/
COPY index.html ./
COPY vite.config.ts ./
COPY tsconfig.json ./
COPY tsconfig.node.json ./
COPY tailwind.config.js ./
COPY postcss.config.js ./

RUN npm run build

# 清理开发依赖
RUN cd server && npm prune --production

# ================================
# 配置 Nginx
# ================================
# 删除默认配置
RUN rm -f /etc/nginx/nginx.conf /etc/nginx/conf.d/default.conf

# 复制 Nginx 配置
COPY docker/nginx/all-in-one.conf /etc/nginx/nginx.conf

# 创建 Nginx html 目录并复制前端构建结果
RUN mkdir -p /usr/share/nginx/html && \
    cp -r dist/* /usr/share/nginx/html/

# ================================
# 配置 Supervisor
# ================================
COPY docker/supervisor/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# ================================
# 创建必要的目录和权限
# ================================
RUN mkdir -p /app/server/uploads /app/server/logs /var/log/supervisor /run/nginx /var/log/nginx \
    && chmod -R 755 /app/server/uploads /app/server/logs \
    && chmod -R 755 /usr/share/nginx/html \
    && chmod -R 755 /var/log/nginx \
    && chmod -R 755 /run/nginx

# 复制启动脚本
COPY docker/scripts/start.sh /start.sh
RUN chmod +x /start.sh

# 暴露端口 (只暴露前端端口)
EXPOSE 3000

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1

# 启动脚本
CMD ["/start.sh"]
